Системы покрытые тейсингом:
    1. shop API
    2. crm API
    3. MES API
    4. MQ
    5. MES
Данные для трейсинга:
id трейсинга, id операции, id операции, которая запустила текущую операцию (если такая есть), исполняемый метод API, URL (эндпоинт), код ответа, название микросервиса, время обработки, время начала и окончания операции, описание ошибки (если она произошла)

Мотифация:
Внедрение трейсинга позволит быстрее и точнее определить проблемные места в системе, собрать необходимый минимальный набор данных для проведения анализа проблемы и подготовиться к ее решению. Трейсинг позволит с наименьшими затратами проверить полный путь прохождения запроса и собрать необходимые данные, чтобы понять почему у пользователей такое время ожидания ответа, узнать какое влияние и какие запросы оказывают на каждый микросервис и при нахождение проблемных мест устранить их

Предлагаемое решение:
    1. Использование Jaeger для трейсинга.
    2. Интеграция Jaeger с каждым сервисом через OpenTracing API.
    3. Визуализация трейсов в Jaeger UI.

Компромиссы
    1. Проприетарные системы могут потребовать доработки для интеграции с трейсингом.
    2. Необходимо учитывать безопасность доступа к трейсам.

Безопасность
    1. Внедрение аутентификации — зайти в систему смогут только сотрудники компании с актуальной учетной записью и ролью “Поддержка”
    2. Маскирование данных, которые необходимо защитить (допустим в ошибках) 
    3. Проверка на наличие персональных данных в трейсах, если доступ открыт к использованию

Предлагаемое решение Task3/Предлагаемое решение.drawio.png